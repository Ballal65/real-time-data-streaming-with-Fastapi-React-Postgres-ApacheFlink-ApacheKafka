services:       
#Zoopkeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

#Kafka broker
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

#Kafka UI
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: on-failure
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    ports:
      - "9000:9000"

#Postgres Database     
  postgres:
    image: postgres:14
    restart: on-failure
    container_name: ${DOCKER_CONTAINER}
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_SCHEMA}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${HOST_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

#pgAdmin UI for Postgres Database
  pgadmin:
    image: dpage/pgadmin4
    restart: on-failure
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

#FastAPI Backend
  backend:
    build: ./backend
    restart: on-failure
    container_name: backend
    command: ["python", "-m", "app.main", "true"]
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    env_file:
      - .env

#React frontend
  frontend:
    build: ./frontend
    restart: on-failure
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: ["npm", "start"]

volumes:
  postgres-data:
  pgadmin-data: